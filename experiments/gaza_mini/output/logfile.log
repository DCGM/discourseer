DEBUG:root:run_discourseer.py:main: Python file location: /home/xvlach22/skola/10-sem-23-24-letni/PP1/discourseer/run_discourseer.py
DEBUG:root:run_discourseer.py:main: Arguments: Namespace(experiment_dir='experiments/gaza_mini/', texts_dir=None, ratings_dir=None, output_dir=None, prompt_schema_definition='experiments/gaza/prompt_schema_definition.json', prompt_definitions='experiments/gaza/prompt_definitions.json', prompt_subset=[], copy_input_ratings=<RatingsCopyMode.none: 'none'>, openai_api_key=None, log='DEBUG')
DEBUG:root:run_discourseer.py:prepare_output_dir: Directory experiments/gaza_mini/output already exists. Saving the result to experiments/gaza_mini/output_20240610-211817
DEBUG:root:run_discourseer.py:load_prompts: Loading prompts from file: experiments/gaza/prompt_definitions.json
DEBUG:root:run_discourseer.py:__init__: Prompts: prompts={'zpravodajské-hodnoty': ExtractionPrompt(name='Zpravodajské hodnoty', question_id='Zpravodajské hodnoty', description='Zpravodajské hodnoty (multiple)', multiple_choice=True, options=[ResultOption(name='Negativita negativity', description='Zdůrazňují se negativní jevy (konflikty, útoky, tragédie), negativní emoce (panika, strach, zoufalství), negativní jednání (krutost).'), ResultOption(name='Blízkost proximity', description='Reportované události jsou zobrazeny jako geograficky nebo kulturně blízké (explicitní odkazy na společné hodnoty, na relevanci zprávy pro Česko a Čechy; čeští politici vyjadřující se k situaci).'), ResultOption(name='Elitní osoby prominence', description='Zpráva obsahuje stanoviska vrcholných politiků, mezinárodních organizací, celebrit - lidí a organizací vnímaných jako autority'), ResultOption(name='Personalizace personalization', description="Zpráva přibližuje osobní příběhy 'obyčejných' lidí (HLP)"), ResultOption(name='Dopad impact', description='Zpráva reflektuje důsledky událostí, ty jsou zobrazené jaké globální spíš než lokální, značné, dalekosáhlé, mimořádné, týkající se či ovlivňující velký počet lidí.')]), 'message': ExtractionPrompt(name='Message', question_id='Hlavní téma článku', description='Zvolte hlavní téma článku. Podle modelu obracené pyramidy by hlavní téma mělo být obsaženo už v titulku a leadu, měla by k němu odkazovat většina výroků v textu. U každé zprávy lze určit jen jedno hlavní téma.', multiple_choice=False, options=[ResultOption(name='Vnitřní politické dění', description='Zpráva informuje o politickém vývoji v Izraeli nebo v Gaze, prohlášeních tamějích politiků, jejich návrhů na řešení konfliktu nebo reakcích na zahraniční diplomatické úsilí. Patří sem i zprávy o výměnách rukojmí.'), ResultOption(name='Mezinárodní politické reakce', description='Zpráva informuje o mezinárodních reakcích na konflikt ze strany vrcholných politiků, mezinárodních organizací jako UN, o diplomatických iniciativách, jednáních, snahách o zprostředkování příměří.'), ResultOption(name='Vojenské operace Izraele', description='Zpráva popisuje izraelské vojenské operace, jejich provedení, ale i plánování a taktizování.'), ResultOption(name='Teroristické operace', description='Zpráva se soustředí na útoky palestinských frakcí jako Hamas, Hizballáh a dalších ozbrojených skupin, které jsou označeny jako teroristické (útoky Hútiů/Húsiů).'), ResultOption(name='Dílčí konflikty a střety', description='Zpráva informuje o dílčích konfliktech a nevraživostech, o izolovaných případech násilí, jako jsou útoky osadníků nebo střelba na kontrolních stanovištích.'), ResultOption(name='Dopad na civilisty a humanitární krize', description='Zpráva popisuje dopady konfliktu na civilisty, soustředí se na civilní oběti, vysídlení, dění v uprchlických táborech a příběhy Palestinců nebo Izraelců přímo zasažených konfliktem.'), ResultOption(name='Humanitární pomoc', description='Zpráva popisuje snahy o poskytování nebo blokování humanitární pomoci, věnuje se možnostem podpory civilistům zasažených konfliktem, které vznikly z iniciativ vlád, nevládních organizací a mezinárodních organizací.'), ResultOption(name='Globální reakce veřejnosti', description='Zpráva informuje o demonstracích na podporu Izraele nebo Palestiny ve světě.'), ResultOption(name='Ekonomické důsledky', description='Zpráva informuje o globálních ekonomických důsledcích konfliktu (vliv na ceny ropy, zpožďování a zdražování přepravy zboží kvůli situaci v Suezském průplavu, komplikace pro turismus atd.)'), ResultOption(name='Jiné', description='')]), 'medialni-ramec': ExtractionPrompt(name='Mediální rámce (multiple)', question_id='Mediální rámce', description='While the categories of topics focus on the content areas being covered (such as political negotiations, military operations, humanitarian crises, etc.), the media frames shape how that content is presented and interpreted by the audience.', multiple_choice=True, options=[ResultOption(name='Rámec konfliktu', description='Zpráva situaci zobrazuje jako napjatou, konfliktní, nespravedlivou, polarizovanou. Dané rozpory jsou implicitně nebo explicitně zobrazeny jako těžko řešitelné, resp. řešitelné především silou. Zpráva implicitně nebo explicitně rozvrhuje aktéry do ingroup a outgroup, kde zisk jedné ze stran znamená ztrátu pro druhou a naopak.'), ResultOption(name='Rámec budování míru', description='Zpráva výrazňuje snahy o řešení konfliktu prostřednictvím diplomacie, jednání a iniciativ budování míru. Tento rámec zdůrazňuje konstruktivní kroky směrem k míru a povzbuzuje optimismus ohledně možných řešení. Palestince a Izraelce nestaví proti sobě jako inherentně nepřátelské strany, ale apeluje na lidskost obou.'), ResultOption(name='Humanitární rámec', description='Zpráva se soustředí na důsledky konfliktu pro běžný občanský život, zdůrazňuje civilní oběti, vysídlování a utrpení lidí na obou stranách. Tento rámec pomáhá vyvolat empatii a zdůrazňuje naléhavou potřebu humanitární pomoci.'), ResultOption(name='Historicko-kulturní rámec', description='Zpráva zobrazuje situaci jako součást komplikovaného dlouhotvrajícího konfliktu, zdůrazňuje potřebnost znalosti historického kontextu, geopolitických faktorů či perspektiv zúčastněných aktérů pro pochopení současného stavu. Tento rámec pomáhá divákům rozvinout hlubší porozumění základních příčin a dynamiky konfliktu.'), ResultOption(name='Geopolitický rámec', description='Zpráva zdůrazňuje globální geopolitický rozměr konfliktu, jehož důležitost přesahuje bezprostředně zasažené aktéry (blízký Východ). Zohledňuje mezinárodní reakce na konflikt, a to jak politické (diplomatická prohlášení, protesty a výzev k akci ze strany globálního společenství), tak občanské (demonstrace na podporu Izraele nebo Palestiny, diskuze na akademické půdě). Tento rámec ilustruje vzájemné propojení konfliktu s širšími geopolitickými dynamikami a veřejným míněním po celém světě.'), ResultOption(name='Lokální rámec', description='Zpráva zobrazuje události jako zasahující bezprostředně zúčastněné (blízký Východ); responses from individuals, communities, and organizations within Israel and Palestine')]), 'mluvci': ExtractionPrompt(name='Mluvčí', question_id='Mluvčí', description='typ mluvčích (multiple)', multiple_choice=True, options=[ResultOption(name='Političtí představitelé Izraele', description='Vládní a opoziční politici, diplomaté Izraele a v Izraeli, kteří jsou přímo zapojeni do rozhodování a jednání souvisejících s konfliktem nebo je komentují.'), ResultOption(name='Političtí představitelé Palestiny', description='Političtí představitelé Palestinské samosprávy nebo jiných palestinských vládních orgánů, včetně zvolených úředníků a vůdců.'), ResultOption(name='Politici z blízkovýchodních zemí', description='Politici z jiných arabských nebo blízkovýchodních zemí, kteří mají zájem nebo účast v konfliktu, jako jsou ti z okolních arabských států nebo regionálních mocností.'), ResultOption(name='Politici ze západních zemí', description='Politici ze západních zemí, včetně Spojených států, členských států Evropské unie a dalších západních zemí, kteří se mohou zapojovat do diplomatických úsilí nebo mít zájmy v konfliktu.'), ResultOption(name='Mezinárodní organizace', description='Zástupci mezinárodních organizací zapojených do mírových operací, humanitární pomoci nebo diplomacie související s konfliktem, jako jsou Spojené národy, Evropská unie nebo Arabská liga.'), ResultOption(name='Vojenští představitelé Izraele', description='Vojenští vůdci, velitelé nebo mluvčí z Izraelských obranných sil (IDF) nebo jiných izraelských bezpečnostních agentur zapojených do vojenských operací.'), ResultOption(name='Představitelé teroristických skupin', description='Zástupci nebo vůdci militantních nebo teroristických skupin působících v regionu, jako jsou Hamas, Islámská džihád nebo Hizballáh.'), ResultOption(name='Experti a analytici', description='Odborníci, akademici, analytici nebo komentátoři specializující se na blízkovýchodní záležitosti, řešení konfliktu, mezinárodní vztahy nebo související oblasti, poskytující porozumění a analýzu konfliktu.'), ResultOption(name='Média a novináři', description='V textu jsou citovány informace převzaté z jiných médií (např. ""podle New York Times...), k nimž není přiřazen žádný jiný mluvčí (může jít o investigativu média, informace poskytnuté anonymně atd.)'), ResultOption(name='Zástupci občanské společnosti', description='Zástupci občanských sdružení, nevládních organizací, lidskoprávních skupin, náboženských institucí nebo skupin prosazujících mír, humanitární úsilí nebo aktivismus související s konfliktem.'), ResultOption(name='Očití svědci a civilisté', description='Očití svědkové, přeživší, civilisté nebo obyvatelé přímo postižení konfliktem, poskytující svědectví, rozhovory nebo pohledy na události na místě.'), ResultOption(name='Členové izraelské nebo palestinské diaspory v zahraničí a sympatizanti', description='Členové izraelské nebo palestinské diaspory žijící v zahraničí, stejně jako sympatizanti nebo aktivisté mimo region, kteří podporují nebo odsuzují určité postoje v souvislosti s konfliktem.'), ResultOption(name='Jiní', description='')])}


DEBUG:root:run_discourseer.py:load_prompt_schema_definition: Loading prompt definition from file:experiments/gaza/prompt_schema_definition.json
DEBUG:httpx:_config.py:load_ssl_context: load_ssl_context verify=True cert=None trust_env=True http2=False
DEBUG:httpx:_config.py:load_ssl_context_verify: load_verify_locations cafile='/etc/ssl/certs/ca-certificates.crt'
DEBUG:openai._base_client:_base_client.py:_build_request: Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a friendly chat bot.'}, {'role': 'user', 'content': 'Say Hi!'}], 'model': 'gpt-3.5-turbo'}}
DEBUG:httpcore.connection:_trace.py:trace: connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG:httpcore.connection:_trace.py:trace: connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x71c4dd7b9390>
DEBUG:httpcore.connection:_trace.py:trace: start_tls.started ssl_context=<ssl.SSLContext object at 0x71c4dd8e63c0> server_hostname='api.openai.com' timeout=5.0
DEBUG:httpcore.connection:_trace.py:trace: start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x71c4dd7b9360>
DEBUG:httpcore.http11:_trace.py:trace: send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:_trace.py:trace: send_request_headers.complete
DEBUG:httpcore.http11:_trace.py:trace: send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:_trace.py:trace: send_request_body.complete
DEBUG:httpcore.http11:_trace.py:trace: receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:_trace.py:trace: receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 10 Jun 2024 19:18:18 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-organization', b'user-eojliflj4bavern4nobjkpw0'), (b'openai-processing-ms', b'473'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'60000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'59973'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'27ms'), (b'x-request-id', b'req_a7319f687aae425e9132da7ba3524fd1'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=IF_IdJuoJ_J6NWEVBH0bFxXVC2d.Qp1QQp27z9C.qBk-1718047098-1.0.1.1-GUgzU21Vn9dPuZNCmJcoXEFkvvm65UknrZesrmnXn2r.gz03h1OysheeQlhGroVNYGyZNUsdWY9LRxIf8pNdhw; path=/; expires=Mon, 10-Jun-24 19:48:18 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=KQVbhCSykoHoft528EhcbM0X1OsCK_8VN0TY4ZzoRb8-1718047098093-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'891bb4d64904b374-PRG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:_client.py:_send_single_request: HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:_trace.py:trace: receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:_trace.py:trace: receive_response_body.complete
DEBUG:httpcore.http11:_trace.py:trace: response_closed.started
DEBUG:httpcore.http11:_trace.py:trace: response_closed.complete
DEBUG:openai._base_client:_base_client.py:_request: HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
INFO:root:run_discourseer.py:__init__: First prompt: You are a media content analyst. You are analyzing the following text to extract {prompt_names}. {pr...
DEBUG:root:run_discourseer.py:extract_answers: New document:


DEBUG:root:run_discourseer.py:extract_answers: Extracting answers from text: Benzin znovu zlevní pod 39 korun. Navzdory konflik...
DEBUG:openai._base_client:_base_client.py:_build_request: Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a media content analyst. You are analyzing the following text to extract Zpravodajské hodnoty, Message, Mediální rámce (multiple), Mluvčí. Zpravodajské hodnoty: Zpravodajské hodnoty (multiple) Message: Zvolte hlavní téma článku. Podle modelu obracené pyramidy by hlavní téma mělo být obsaženo už v titulku a leadu, měla by k němu odkazovat většina výroků v textu. U každé zprávy lze určit jen jedno hlavní téma. Mediální rámce (multiple): While the categories of topics focus on the content areas being covered (such as political negotiations, military operations, humanitarian crises, etc.), the media frames shape how that content is presented and interpreted by the audience. Mluvčí: typ mluvčích (multiple). For every question pick only options from these lists.\nZpravodajské hodnoty: Negativita negativity (Zdůrazňují se negativní jevy (konflikty, útoky, tragédie), negativní emoce (panika, strach, zoufalství), negativní jednání (krutost).), Blízkost proximity (Reportované události jsou zobrazeny jako geograficky nebo kulturně blízké (explicitní odkazy na společné hodnoty, na relevanci zprávy pro Česko a Čechy; čeští politici vyjadřující se k situaci).), Elitní osoby prominence (Zpráva obsahuje stanoviska vrcholných politiků, mezinárodních organizací, celebrit - lidí a organizací vnímaných jako autority), Personalizace personalization (Zpráva přibližuje osobní příběhy \'obyčejných\' lidí (HLP)), Dopad impact (Zpráva reflektuje důsledky událostí, ty jsou zobrazené jaké globální spíš než lokální, značné, dalekosáhlé, mimořádné, týkající se či ovlivňující velký počet lidí.)\nMessage: Vnitřní politické dění (Zpráva informuje o politickém vývoji v Izraeli nebo v Gaze, prohlášeních tamějích politiků, jejich návrhů na řešení konfliktu nebo reakcích na zahraniční diplomatické úsilí. Patří sem i zprávy o výměnách rukojmí.), Mezinárodní politické reakce (Zpráva informuje o mezinárodních reakcích na konflikt ze strany vrcholných politiků, mezinárodních organizací jako UN, o diplomatických iniciativách, jednáních, snahách o zprostředkování příměří.), Vojenské operace Izraele (Zpráva popisuje izraelské vojenské operace, jejich provedení, ale i plánování a taktizování.), Teroristické operace (Zpráva se soustředí na útoky palestinských frakcí jako Hamas, Hizballáh a dalších ozbrojených skupin, které jsou označeny jako teroristické (útoky Hútiů/Húsiů).), Dílčí konflikty a střety (Zpráva informuje o dílčích konfliktech a nevraživostech, o izolovaných případech násilí, jako jsou útoky osadníků nebo střelba na kontrolních stanovištích.), Dopad na civilisty a humanitární krize (Zpráva popisuje dopady konfliktu na civilisty, soustředí se na civilní oběti, vysídlení, dění v uprchlických táborech a příběhy Palestinců nebo Izraelců přímo zasažených konfliktem.), Humanitární pomoc (Zpráva popisuje snahy o poskytování nebo blokování humanitární pomoci, věnuje se možnostem podpory civilistům zasažených konfliktem, které vznikly z iniciativ vlád, nevládních organizací a mezinárodních organizací.), Globální reakce veřejnosti (Zpráva informuje o demonstracích na podporu Izraele nebo Palestiny ve světě.), Ekonomické důsledky (Zpráva informuje o globálních ekonomických důsledcích konfliktu (vliv na ceny ropy, zpožďování a zdražování přepravy zboží kvůli situaci v Suezském průplavu, komplikace pro turismus atd.)), Jiné ()\nMediální rámce (multiple): Rámec konfliktu (Zpráva situaci zobrazuje jako napjatou, konfliktní, nespravedlivou, polarizovanou. Dané rozpory jsou implicitně nebo explicitně zobrazeny jako těžko řešitelné, resp. řešitelné především silou. Zpráva implicitně nebo explicitně rozvrhuje aktéry do ingroup a outgroup, kde zisk jedné ze stran znamená ztrátu pro druhou a naopak.), Rámec budování míru (Zpráva výrazňuje snahy o řešení konfliktu prostřednictvím diplomacie, jednání a iniciativ budování míru. Tento rámec zdůrazňuje konstruktivní kroky směrem k míru a povzbuzuje optimismus ohledně možných řešení. Palestince a Izraelce nestaví proti sobě jako inherentně nepřátelské strany, ale apeluje na lidskost obou.), Humanitární rámec (Zpráva se soustředí na důsledky konfliktu pro běžný občanský život, zdůrazňuje civilní oběti, vysídlování a utrpení lidí na obou stranách. Tento rámec pomáhá vyvolat empatii a zdůrazňuje naléhavou potřebu humanitární pomoci.), Historicko-kulturní rámec (Zpráva zobrazuje situaci jako součást komplikovaného dlouhotvrajícího konfliktu, zdůrazňuje potřebnost znalosti historického kontextu, geopolitických faktorů či perspektiv zúčastněných aktérů pro pochopení současného stavu. Tento rámec pomáhá divákům rozvinout hlubší porozumění základních příčin a dynamiky konfliktu.), Geopolitický rámec (Zpráva zdůrazňuje globální geopolitický rozměr konfliktu, jehož důležitost přesahuje bezprostředně zasažené aktéry (blízký Východ). Zohledňuje mezinárodní reakce na konflikt, a to jak politické (diplomatická prohlášení, protesty a výzev k akci ze strany globálního společenství), tak občanské (demonstrace na podporu Izraele nebo Palestiny, diskuze na akademické půdě). Tento rámec ilustruje vzájemné propojení konfliktu s širšími geopolitickými dynamikami a veřejným míněním po celém světě.), Lokální rámec (Zpráva zobrazuje události jako zasahující bezprostředně zúčastněné (blízký Východ); responses from individuals, communities, and organizations within Israel and Palestine)\nMluvčí: Političtí představitelé Izraele (Vládní a opoziční politici, diplomaté Izraele a v Izraeli, kteří jsou přímo zapojeni do rozhodování a jednání souvisejících s konfliktem nebo je komentují.), Političtí představitelé Palestiny (Političtí představitelé Palestinské samosprávy nebo jiných palestinských vládních orgánů, včetně zvolených úředníků a vůdců.), Politici z blízkovýchodních zemí (Politici z jiných arabských nebo blízkovýchodních zemí, kteří mají zájem nebo účast v konfliktu, jako jsou ti z okolních arabských států nebo regionálních mocností.), Politici ze západních zemí (Politici ze západních zemí, včetně Spojených států, členských států Evropské unie a dalších západních zemí, kteří se mohou zapojovat do diplomatických úsilí nebo mít zájmy v konfliktu.), Mezinárodní organizace (Zástupci mezinárodních organizací zapojených do mírových operací, humanitární pomoci nebo diplomacie související s konfliktem, jako jsou Spojené národy, Evropská unie nebo Arabská liga.), Vojenští představitelé Izraele (Vojenští vůdci, velitelé nebo mluvčí z Izraelských obranných sil (IDF) nebo jiných izraelských bezpečnostních agentur zapojených do vojenských operací.), Představitelé teroristických skupin (Zástupci nebo vůdci militantních nebo teroristických skupin působících v regionu, jako jsou Hamas, Islámská džihád nebo Hizballáh.), Experti a analytici (Odborníci, akademici, analytici nebo komentátoři specializující se na blízkovýchodní záležitosti, řešení konfliktu, mezinárodní vztahy nebo související oblasti, poskytující porozumění a analýzu konfliktu.), Média a novináři (V textu jsou citovány informace převzaté z jiných médií (např. ""podle New York Times...), k nimž není přiřazen žádný jiný mluvčí (může jít o investigativu média, informace poskytnuté anonymně atd.)), Zástupci občanské společnosti (Zástupci občanských sdružení, nevládních organizací, lidskoprávních skupin, náboženských institucí nebo skupin prosazujících mír, humanitární úsilí nebo aktivismus související s konfliktem.), Očití svědci a civilisté (Očití svědkové, přeživší, civilisté nebo obyvatelé přímo postižení konfliktem, poskytující svědectví, rozhovory nebo pohledy na události na místě.), Členové izraelské nebo palestinské diaspory v zahraničí a sympatizanti (Členové izraelské nebo palestinské diaspory žijící v zahraničí, stejně jako sympatizanti nebo aktivisté mimo region, kteří podporují nebo odsuzují určité postoje v souvislosti s konfliktem.), Jiní ()\n\nYou will pick one option for these questions: Message. You will pick one or more options for these prompts: Zpravodajské hodnoty, Mediální rámce (multiple), Mluvčí.\nText will be in Czech language. JSON anwers will be in same language as the options are. You will give answer in JSON format according to this schema:'}, {'role': 'system', 'content': '{\n  "properties": {\n    "Zpravodajsk\\u00e9 hodnoty": {\n      "items": {\n        "enum": [\n          "Negativita negativity",\n          "Bl\\u00edzkost proximity",\n          "Elitn\\u00ed osoby prominence",\n          "Personalizace personalization",\n          "Dopad impact"\n        ],\n        "type": "string"\n      },\n      "title": "Zpravodajsk\\u00e9 Hodnoty",\n      "type": "array"\n    },\n    "Message": {\n      "enum": [\n        "Vnit\\u0159n\\u00ed politick\\u00e9 d\\u011bn\\u00ed",\n        "Mezin\\u00e1rodn\\u00ed politick\\u00e9 reakce",\n        "Vojensk\\u00e9 operace Izraele",\n        "Teroristick\\u00e9 operace",\n        "D\\u00edl\\u010d\\u00ed konflikty a st\\u0159ety",\n        "Dopad na civilisty a humanit\\u00e1rn\\u00ed krize",\n        "Humanit\\u00e1rn\\u00ed pomoc",\n        "Glob\\u00e1ln\\u00ed reakce ve\\u0159ejnosti",\n        "Ekonomick\\u00e9 d\\u016fsledky",\n        "Jin\\u00e9"\n      ],\n      "title": "Message",\n      "type": "string"\n    },\n    "Medi\\u00e1ln\\u00ed r\\u00e1mce (multiple)": {\n      "items": {\n        "enum": [\n          "R\\u00e1mec konfliktu",\n          "R\\u00e1mec budov\\u00e1n\\u00ed m\\u00edru",\n          "Humanit\\u00e1rn\\u00ed r\\u00e1mec",\n          "Historicko-kulturn\\u00ed r\\u00e1mec",\n          "Geopolitick\\u00fd r\\u00e1mec",\n          "Lok\\u00e1ln\\u00ed r\\u00e1mec"\n        ],\n        "type": "string"\n      },\n      "title": "Medi\\u00e1ln\\u00ed R\\u00e1mce (Multiple)",\n      "type": "array"\n    },\n    "Mluv\\u010d\\u00ed": {\n      "items": {\n        "enum": [\n          "Politi\\u010dt\\u00ed p\\u0159edstavitel\\u00e9 Izraele",\n          "Politi\\u010dt\\u00ed p\\u0159edstavitel\\u00e9 Palestiny",\n          "Politici z bl\\u00edzkov\\u00fdchodn\\u00edch zem\\u00ed",\n          "Politici ze z\\u00e1padn\\u00edch zem\\u00ed",\n          "Mezin\\u00e1rodn\\u00ed organizace",\n          "Vojen\\u0161t\\u00ed p\\u0159edstavitel\\u00e9 Izraele",\n          "P\\u0159edstavitel\\u00e9 teroristick\\u00fdch skupin",\n          "Experti a analytici",\n          "M\\u00e9dia a novin\\u00e1\\u0159i",\n          "Z\\u00e1stupci ob\\u010dansk\\u00e9 spole\\u010dnosti",\n          "O\\u010dit\\u00ed sv\\u011bdci a civilist\\u00e9",\n          "\\u010clenov\\u00e9 izraelsk\\u00e9 nebo palestinsk\\u00e9 diaspory v zahrani\\u010d\\u00ed a sympatizanti",\n          "Jin\\u00ed"\n        ],\n        "type": "string"\n      },\n      "title": "Mluv\\u010d\\u00ed",\n      "type": "array"\n    }\n  },\n  "required": [\n    "Zpravodajsk\\u00e9 hodnoty",\n    "Message",\n    "Medi\\u00e1ln\\u00ed r\\u00e1mce (multiple)",\n    "Mluv\\u010d\\u00ed"\n  ],\n  "title": "ResponseFormat",\n  "type": "object"\n}'}, {'role': 'user', 'content': 'The text to analyze is: Benzin znovu zlevní pod 39 korun. Navzdory konfliktu v Izraeli\n\nBenzin znovu zlevní pod 39 korun. Navzdory konfliktu v Izraeli\n\nPřestože vpád palestinských teroristů do Izraele zvedl ceny ropy na světových trzích, u čerpacích stanic v Česku pohonné hmoty zlevňují. Experti předpokládají, že příznivý trend bude pokračovat. Koncem příštího týdne by se měl Natural 95 na českých benzinkách prodávat za méně než 39 korun.\n\n\nV současnosti se v Česku benzin tankuje v průměru za 40,10 korun a nafta za 40,25, uvádí společnost CCS, která ceny pohonných hmot dlouhodobě sleduje. Za poslední týden tak benzin zlevnil o 46 haléřů na litr a nafta o 16 haléřů.\n\n„Pokles bude pokračovat v tomto i příštím týdnu. Důvodem je zejména snížení velkoobchodních cen v celé Evropě,“ řekl Právu analytik Boris Tomčiak ze společnosti Finlord.\n\nJen od konce září klesly ceny rafinérií u benzinu o 1,90 koruny na litr a u nafty o 1,70 koruny. Před víkendovým útokem teroristů v Izraeli také zlevňovala ropa. Barel severomořské ropy Brent, od které se počítají světové ceny, se ještě počátkem září prodával i za 97 dolarů (2255 Kč), druhou říjnovou neděli to bylo o deset dolarů méně.\n\n„Projeví se to i v maloobchodních cenách, do dvou týdnů benzin klesne až o 1,50 koruny. U nafty to bude o něco méně,“ doplnil Tomčiak. Poprvé od začátku srpna se tak Natural 95 dostane pod 39 korun, nafta by se podle Tomčiaka mohla hranici 39 korun přiblížit.\n\nPesimističtější je hlavní ekonom BH Securities Štěpán Křeček, který očekává, že ceny pohonných hmot klesnou pouze pod hranici 40 korun. Připomněl, že koruna zůstává relativně slabá vůči americkému dolaru, když se drží nad hodnotou 23 korun.\n\nPo dvou týdnech by se snižování mělo zastavit. Nejen v důsledku izraelsko-palestinského konfliktu, ale také kvůli záměru OPEC, tedy Organizace zemí vyvážejících ropu, snižovat těžbu i export.\n\n„Ve světě je menší poptávka, než se očekávalo. Například ve Spojených státech je nyní spotřeba pohonných hmot nejnižší od počátku roku, pomaleji roste poptávka po ropě v Číně. Ani při snížené těžbě tak nedostatek ropy není tak výrazný,“ popsal Tomčiak.\n\nVývoj cen benzinu a nafty\n\nRopa kvůli konfliktu zdražuje\n\nV důsledku víkendového napadení Izraele islamistickým hnutím Hamás vyrazily ceny ropy směrem vzhůru. V pondělí kolem 14:30 SELČ stál podle serveru Investing.com severomořský Brent 87,7 dolaru (2040 Kč), což je o 3,7 procenta víc oproti páteční hodnotě 84,5 dolaru.\n\n„Zatím není reakce v souvislosti s útokem na Izrael tak zásadní,“ prohlásil Křeček.\n\n„Vliv na cenu ropy konflikt měl, zatím však jen mírný. V tuto chvíli neznamená přímé ohrožení těžby nebo přepravy, spekuluje se ale o dopadu na produkci Íránu,“ zmínil Tomčiak třetího největšího exportéra v kartelu OPEC za Saúdskou Arábií a Irákem.\n\nV současnosti podle něj Írán produkuje tři miliony barelů ropy denně. „Mluví se o tom, že Teherán podporuje hnutí Hamás, a jde o to, zda na něj Západ neuvalí další sankce,“ vysvětlil analytik možné dlouhodobější riziko ve světovém obchodu s ropou spojené s útokem na Izrael.\n\n„Objem íránské těžby představuje tři procenta celosvětové denní spotřeby. Zatím ale informace o zpřísnění sankcí nejsou,“ dodal Tomčiak.\n\n'}], 'model': 'gpt-3.5-turbo-0125', 'max_tokens': 1024, 'temperature': 0.0, 'top_p': 0.0}}
DEBUG:httpcore.http11:_trace.py:trace: send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:_trace.py:trace: send_request_headers.complete
DEBUG:httpcore.http11:_trace.py:trace: send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:_trace.py:trace: send_request_body.complete
DEBUG:httpcore.http11:_trace.py:trace: receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:_trace.py:trace: receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 10 Jun 2024 19:18:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-organization', b'user-eojliflj4bavern4nobjkpw0'), (b'openai-processing-ms', b'1764'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'60000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'55904'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'4.096s'), (b'x-request-id', b'req_317610d860d1431e8b56df07ea7a3e30'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'891bb4db486bb374-PRG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:_client.py:_send_single_request: HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:_trace.py:trace: receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:_trace.py:trace: receive_response_body.complete
DEBUG:httpcore.http11:_trace.py:trace: response_closed.started
DEBUG:httpcore.http11:_trace.py:trace: response_closed.complete
DEBUG:openai._base_client:_base_client.py:_request: HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:root:run_discourseer.py:extract_answers: Response: {'Zpravodajské hodnoty': ['Dopad impact'], 'Message': 'Ekonomické důsledky', 'Mediální rámce (multiple)': ['Rámec konfliktu', 'Geopolitický rámec'], 'Mluvčí': ['Experti a analytici']}
DEBUG:root:rater.py:add_model_response: Adding rating: Zpravodajské hodnoty, ['Dopad impact']
DEBUG:root:rater.py:add_model_response: saved rating: file='2023-10-10T09-37-00_2023WN283037.txt' prompt_key='zpravodajské-hodnoty' question_id='Zpravodajské hodnoty' rating_results=['Dopad impact']
DEBUG:root:rater.py:add_model_response: Adding rating: Message, Ekonomické důsledky
DEBUG:root:rater.py:add_model_response: saved rating: file='2023-10-10T09-37-00_2023WN283037.txt' prompt_key='message' question_id='Hlavní téma článku' rating_results=['Ekonomické důsledky']
DEBUG:root:rater.py:add_model_response: Adding rating: Mediální rámce (multiple), ['Rámec konfliktu', 'Geopolitický rámec']
DEBUG:root:rater.py:add_model_response: saved rating: file='2023-10-10T09-37-00_2023WN283037.txt' prompt_key='medialni-ramec' question_id='Mediální rámce' rating_results=['Rámec konfliktu', 'Geopolitický rámec']
DEBUG:root:rater.py:add_model_response: Adding rating: Mluvčí, ['Experti a analytici']
DEBUG:root:rater.py:add_model_response: saved rating: file='2023-10-10T09-37-00_2023WN283037.txt' prompt_key='mluvci' question_id='Mluvčí' rating_results=['Experti a analytici']
DEBUG:root:run_discourseer.py:extract_answers: New document:


DEBUG:root:run_discourseer.py:extract_answers: Extracting answers from text: Ostřelování Izraele z Pásma Gazy si vyžádalo zraně...
DEBUG:openai._base_client:_base_client.py:_build_request: Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a media content analyst. You are analyzing the following text to extract Zpravodajské hodnoty, Message, Mediální rámce (multiple), Mluvčí. Zpravodajské hodnoty: Zpravodajské hodnoty (multiple) Message: Zvolte hlavní téma článku. Podle modelu obracené pyramidy by hlavní téma mělo být obsaženo už v titulku a leadu, měla by k němu odkazovat většina výroků v textu. U každé zprávy lze určit jen jedno hlavní téma. Mediální rámce (multiple): While the categories of topics focus on the content areas being covered (such as political negotiations, military operations, humanitarian crises, etc.), the media frames shape how that content is presented and interpreted by the audience. Mluvčí: typ mluvčích (multiple). For every question pick only options from these lists.\nZpravodajské hodnoty: Negativita negativity (Zdůrazňují se negativní jevy (konflikty, útoky, tragédie), negativní emoce (panika, strach, zoufalství), negativní jednání (krutost).), Blízkost proximity (Reportované události jsou zobrazeny jako geograficky nebo kulturně blízké (explicitní odkazy na společné hodnoty, na relevanci zprávy pro Česko a Čechy; čeští politici vyjadřující se k situaci).), Elitní osoby prominence (Zpráva obsahuje stanoviska vrcholných politiků, mezinárodních organizací, celebrit - lidí a organizací vnímaných jako autority), Personalizace personalization (Zpráva přibližuje osobní příběhy \'obyčejných\' lidí (HLP)), Dopad impact (Zpráva reflektuje důsledky událostí, ty jsou zobrazené jaké globální spíš než lokální, značné, dalekosáhlé, mimořádné, týkající se či ovlivňující velký počet lidí.)\nMessage: Vnitřní politické dění (Zpráva informuje o politickém vývoji v Izraeli nebo v Gaze, prohlášeních tamějích politiků, jejich návrhů na řešení konfliktu nebo reakcích na zahraniční diplomatické úsilí. Patří sem i zprávy o výměnách rukojmí.), Mezinárodní politické reakce (Zpráva informuje o mezinárodních reakcích na konflikt ze strany vrcholných politiků, mezinárodních organizací jako UN, o diplomatických iniciativách, jednáních, snahách o zprostředkování příměří.), Vojenské operace Izraele (Zpráva popisuje izraelské vojenské operace, jejich provedení, ale i plánování a taktizování.), Teroristické operace (Zpráva se soustředí na útoky palestinských frakcí jako Hamas, Hizballáh a dalších ozbrojených skupin, které jsou označeny jako teroristické (útoky Hútiů/Húsiů).), Dílčí konflikty a střety (Zpráva informuje o dílčích konfliktech a nevraživostech, o izolovaných případech násilí, jako jsou útoky osadníků nebo střelba na kontrolních stanovištích.), Dopad na civilisty a humanitární krize (Zpráva popisuje dopady konfliktu na civilisty, soustředí se na civilní oběti, vysídlení, dění v uprchlických táborech a příběhy Palestinců nebo Izraelců přímo zasažených konfliktem.), Humanitární pomoc (Zpráva popisuje snahy o poskytování nebo blokování humanitární pomoci, věnuje se možnostem podpory civilistům zasažených konfliktem, které vznikly z iniciativ vlád, nevládních organizací a mezinárodních organizací.), Globální reakce veřejnosti (Zpráva informuje o demonstracích na podporu Izraele nebo Palestiny ve světě.), Ekonomické důsledky (Zpráva informuje o globálních ekonomických důsledcích konfliktu (vliv na ceny ropy, zpožďování a zdražování přepravy zboží kvůli situaci v Suezském průplavu, komplikace pro turismus atd.)), Jiné ()\nMediální rámce (multiple): Rámec konfliktu (Zpráva situaci zobrazuje jako napjatou, konfliktní, nespravedlivou, polarizovanou. Dané rozpory jsou implicitně nebo explicitně zobrazeny jako těžko řešitelné, resp. řešitelné především silou. Zpráva implicitně nebo explicitně rozvrhuje aktéry do ingroup a outgroup, kde zisk jedné ze stran znamená ztrátu pro druhou a naopak.), Rámec budování míru (Zpráva výrazňuje snahy o řešení konfliktu prostřednictvím diplomacie, jednání a iniciativ budování míru. Tento rámec zdůrazňuje konstruktivní kroky směrem k míru a povzbuzuje optimismus ohledně možných řešení. Palestince a Izraelce nestaví proti sobě jako inherentně nepřátelské strany, ale apeluje na lidskost obou.), Humanitární rámec (Zpráva se soustředí na důsledky konfliktu pro běžný občanský život, zdůrazňuje civilní oběti, vysídlování a utrpení lidí na obou stranách. Tento rámec pomáhá vyvolat empatii a zdůrazňuje naléhavou potřebu humanitární pomoci.), Historicko-kulturní rámec (Zpráva zobrazuje situaci jako součást komplikovaného dlouhotvrajícího konfliktu, zdůrazňuje potřebnost znalosti historického kontextu, geopolitických faktorů či perspektiv zúčastněných aktérů pro pochopení současného stavu. Tento rámec pomáhá divákům rozvinout hlubší porozumění základních příčin a dynamiky konfliktu.), Geopolitický rámec (Zpráva zdůrazňuje globální geopolitický rozměr konfliktu, jehož důležitost přesahuje bezprostředně zasažené aktéry (blízký Východ). Zohledňuje mezinárodní reakce na konflikt, a to jak politické (diplomatická prohlášení, protesty a výzev k akci ze strany globálního společenství), tak občanské (demonstrace na podporu Izraele nebo Palestiny, diskuze na akademické půdě). Tento rámec ilustruje vzájemné propojení konfliktu s širšími geopolitickými dynamikami a veřejným míněním po celém světě.), Lokální rámec (Zpráva zobrazuje události jako zasahující bezprostředně zúčastněné (blízký Východ); responses from individuals, communities, and organizations within Israel and Palestine)\nMluvčí: Političtí představitelé Izraele (Vládní a opoziční politici, diplomaté Izraele a v Izraeli, kteří jsou přímo zapojeni do rozhodování a jednání souvisejících s konfliktem nebo je komentují.), Političtí představitelé Palestiny (Političtí představitelé Palestinské samosprávy nebo jiných palestinských vládních orgánů, včetně zvolených úředníků a vůdců.), Politici z blízkovýchodních zemí (Politici z jiných arabských nebo blízkovýchodních zemí, kteří mají zájem nebo účast v konfliktu, jako jsou ti z okolních arabských států nebo regionálních mocností.), Politici ze západních zemí (Politici ze západních zemí, včetně Spojených států, členských států Evropské unie a dalších západních zemí, kteří se mohou zapojovat do diplomatických úsilí nebo mít zájmy v konfliktu.), Mezinárodní organizace (Zástupci mezinárodních organizací zapojených do mírových operací, humanitární pomoci nebo diplomacie související s konfliktem, jako jsou Spojené národy, Evropská unie nebo Arabská liga.), Vojenští představitelé Izraele (Vojenští vůdci, velitelé nebo mluvčí z Izraelských obranných sil (IDF) nebo jiných izraelských bezpečnostních agentur zapojených do vojenských operací.), Představitelé teroristických skupin (Zástupci nebo vůdci militantních nebo teroristických skupin působících v regionu, jako jsou Hamas, Islámská džihád nebo Hizballáh.), Experti a analytici (Odborníci, akademici, analytici nebo komentátoři specializující se na blízkovýchodní záležitosti, řešení konfliktu, mezinárodní vztahy nebo související oblasti, poskytující porozumění a analýzu konfliktu.), Média a novináři (V textu jsou citovány informace převzaté z jiných médií (např. ""podle New York Times...), k nimž není přiřazen žádný jiný mluvčí (může jít o investigativu média, informace poskytnuté anonymně atd.)), Zástupci občanské společnosti (Zástupci občanských sdružení, nevládních organizací, lidskoprávních skupin, náboženských institucí nebo skupin prosazujících mír, humanitární úsilí nebo aktivismus související s konfliktem.), Očití svědci a civilisté (Očití svědkové, přeživší, civilisté nebo obyvatelé přímo postižení konfliktem, poskytující svědectví, rozhovory nebo pohledy na události na místě.), Členové izraelské nebo palestinské diaspory v zahraničí a sympatizanti (Členové izraelské nebo palestinské diaspory žijící v zahraničí, stejně jako sympatizanti nebo aktivisté mimo region, kteří podporují nebo odsuzují určité postoje v souvislosti s konfliktem.), Jiní ()\n\nYou will pick one option for these questions: Message. You will pick one or more options for these prompts: Zpravodajské hodnoty, Mediální rámce (multiple), Mluvčí.\nText will be in Czech language. JSON anwers will be in same language as the options are. You will give answer in JSON format according to this schema:'}, {'role': 'system', 'content': '{\n  "properties": {\n    "Zpravodajsk\\u00e9 hodnoty": {\n      "items": {\n        "enum": [\n          "Negativita negativity",\n          "Bl\\u00edzkost proximity",\n          "Elitn\\u00ed osoby prominence",\n          "Personalizace personalization",\n          "Dopad impact"\n        ],\n        "type": "string"\n      },\n      "title": "Zpravodajsk\\u00e9 Hodnoty",\n      "type": "array"\n    },\n    "Message": {\n      "enum": [\n        "Vnit\\u0159n\\u00ed politick\\u00e9 d\\u011bn\\u00ed",\n        "Mezin\\u00e1rodn\\u00ed politick\\u00e9 reakce",\n        "Vojensk\\u00e9 operace Izraele",\n        "Teroristick\\u00e9 operace",\n        "D\\u00edl\\u010d\\u00ed konflikty a st\\u0159ety",\n        "Dopad na civilisty a humanit\\u00e1rn\\u00ed krize",\n        "Humanit\\u00e1rn\\u00ed pomoc",\n        "Glob\\u00e1ln\\u00ed reakce ve\\u0159ejnosti",\n        "Ekonomick\\u00e9 d\\u016fsledky",\n        "Jin\\u00e9"\n      ],\n      "title": "Message",\n      "type": "string"\n    },\n    "Medi\\u00e1ln\\u00ed r\\u00e1mce (multiple)": {\n      "items": {\n        "enum": [\n          "R\\u00e1mec konfliktu",\n          "R\\u00e1mec budov\\u00e1n\\u00ed m\\u00edru",\n          "Humanit\\u00e1rn\\u00ed r\\u00e1mec",\n          "Historicko-kulturn\\u00ed r\\u00e1mec",\n          "Geopolitick\\u00fd r\\u00e1mec",\n          "Lok\\u00e1ln\\u00ed r\\u00e1mec"\n        ],\n        "type": "string"\n      },\n      "title": "Medi\\u00e1ln\\u00ed R\\u00e1mce (Multiple)",\n      "type": "array"\n    },\n    "Mluv\\u010d\\u00ed": {\n      "items": {\n        "enum": [\n          "Politi\\u010dt\\u00ed p\\u0159edstavitel\\u00e9 Izraele",\n          "Politi\\u010dt\\u00ed p\\u0159edstavitel\\u00e9 Palestiny",\n          "Politici z bl\\u00edzkov\\u00fdchodn\\u00edch zem\\u00ed",\n          "Politici ze z\\u00e1padn\\u00edch zem\\u00ed",\n          "Mezin\\u00e1rodn\\u00ed organizace",\n          "Vojen\\u0161t\\u00ed p\\u0159edstavitel\\u00e9 Izraele",\n          "P\\u0159edstavitel\\u00e9 teroristick\\u00fdch skupin",\n          "Experti a analytici",\n          "M\\u00e9dia a novin\\u00e1\\u0159i",\n          "Z\\u00e1stupci ob\\u010dansk\\u00e9 spole\\u010dnosti",\n          "O\\u010dit\\u00ed sv\\u011bdci a civilist\\u00e9",\n          "\\u010clenov\\u00e9 izraelsk\\u00e9 nebo palestinsk\\u00e9 diaspory v zahrani\\u010d\\u00ed a sympatizanti",\n          "Jin\\u00ed"\n        ],\n        "type": "string"\n      },\n      "title": "Mluv\\u010d\\u00ed",\n      "type": "array"\n    }\n  },\n  "required": [\n    "Zpravodajsk\\u00e9 hodnoty",\n    "Message",\n    "Medi\\u00e1ln\\u00ed r\\u00e1mce (multiple)",\n    "Mluv\\u010d\\u00ed"\n  ],\n  "title": "ResponseFormat",\n  "type": "object"\n}'}, {'role': 'user', 'content': 'The text to analyze is: Ostřelování Izraele z Pásma Gazy si vyžádalo zraněné\n\nPalestinci vypálili z Pásma Gazy na Izrael v sobotu ráno několik desítek raket. Jedna žena je po zásahu v kritickém stavu, uvedl list Ha´arec. Zranění jsou nejméně tři. Premiér Benjamin Netanjahu kvůli ostřelování svolal nejvýše postavené bezpečnostní činitele.\n\n\nSirény zněny na jihu a ve střední části Izraele včetně Tel Avivu a taky v oblasti přiléhající k Pásmu Gazy. Exploze byly podle agentury Reuters slyšet v okolí Tel Avivu a také u Jeruzaléma.\n\nSedmdesátiletá žena, která je v kritickém stavu, byla zraněna, když z Pásma vypálili Palestinci raketu směrem k domům, kde žila, napsal list Ha´arec.\n\nDalší člověk byl zraněn v Kfar Avivu, když bylo zasaženo auto ve kterém jel.\n\nIzraelské úřady potvrdily středně těžké zranění 20letého muže, kterého zasáhl šrapnel.\n\nNa sociálních sítích se šíří záběry vypalování raket i obrázky z Aškelonu, kde jsou vidět auta v plamenech a kde byl zasažen i dům.\n\nK útoku se zatím nikdo nepřihlásil. Izrael z podobných akcí nejčastěji obviňuje radikální hnutí Hamás, které ovládá Pásmo Gazy, mnohdy je však podniká palestinský Islámský džihád.\n\nOstřelování může souviset s tím, že před padesáti lety začala jomkippurská válka.\n\n\n\n'}], 'model': 'gpt-3.5-turbo-0125', 'max_tokens': 1024, 'temperature': 0.0, 'top_p': 0.0}}
DEBUG:httpcore.http11:_trace.py:trace: send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:_trace.py:trace: send_request_headers.complete
DEBUG:httpcore.http11:_trace.py:trace: send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:_trace.py:trace: send_request_body.complete
DEBUG:httpcore.http11:_trace.py:trace: receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:_trace.py:trace: receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 10 Jun 2024 19:18:23 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-organization', b'user-eojliflj4bavern4nobjkpw0'), (b'openai-processing-ms', b'2803'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'60000'), (b'x-ratelimit-remaining-requests', b'9998'), (b'x-ratelimit-remaining-tokens', b'52193'), (b'x-ratelimit-reset-requests', b'15.163s'), (b'x-ratelimit-reset-tokens', b'7.806s'), (b'x-request-id', b'req_5b40db851e8bfd963460ed4b75f3028f'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'891bb4e85a20b374-PRG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:_client.py:_send_single_request: HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:_trace.py:trace: receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:_trace.py:trace: receive_response_body.complete
DEBUG:httpcore.http11:_trace.py:trace: response_closed.started
DEBUG:httpcore.http11:_trace.py:trace: response_closed.complete
DEBUG:openai._base_client:_base_client.py:_request: HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:root:run_discourseer.py:extract_answers: Response: {'Zpravodajské hodnoty': ['Negativita negativity', 'Blízkost proximity', 'Dopad impact'], 'Message': 'Teroristické operace', 'Mediální rámce (multiple)': ['Rámec konfliktu', 'Historicko-kulturní rámec'], 'Mluvčí': ['Politici z blízkovýchodních zemí', 'Představitelé teroristických skupin']}
DEBUG:root:rater.py:add_model_response: Adding rating: Zpravodajské hodnoty, ['Negativita negativity', 'Blízkost proximity', 'Dopad impact']
DEBUG:root:rater.py:add_model_response: saved rating: file='2023-10-07T00-00-00_2023WN280011.txt' prompt_key='zpravodajské-hodnoty' question_id='Zpravodajské hodnoty' rating_results=['Negativita negativity', 'Blízkost proximity', 'Dopad impact']
DEBUG:root:rater.py:add_model_response: Adding rating: Message, Teroristické operace
DEBUG:root:rater.py:add_model_response: saved rating: file='2023-10-07T00-00-00_2023WN280011.txt' prompt_key='message' question_id='Hlavní téma článku' rating_results=['Teroristické operace']
DEBUG:root:rater.py:add_model_response: Adding rating: Mediální rámce (multiple), ['Rámec konfliktu', 'Historicko-kulturní rámec']
DEBUG:root:rater.py:add_model_response: saved rating: file='2023-10-07T00-00-00_2023WN280011.txt' prompt_key='medialni-ramec' question_id='Mediální rámce' rating_results=['Rámec konfliktu', 'Historicko-kulturní rámec']
DEBUG:root:rater.py:add_model_response: Adding rating: Mluvčí, ['Politici z blízkovýchodních zemí', 'Představitelé teroristických skupin']
DEBUG:root:rater.py:add_model_response: saved rating: file='2023-10-07T00-00-00_2023WN280011.txt' prompt_key='mluvci' question_id='Mluvčí' rating_results=['Politici z blízkovýchodních zemí', 'Představitelé teroristických skupin']
DEBUG:root:run_discourseer.py:extract_answers: New document:


DEBUG:root:run_discourseer.py:extract_answers: Extracting answers from text: Válka nebude, ujišťovali před týdnem agenti

Odpov...
DEBUG:openai._base_client:_base_client.py:_build_request: Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a media content analyst. You are analyzing the following text to extract Zpravodajské hodnoty, Message, Mediální rámce (multiple), Mluvčí. Zpravodajské hodnoty: Zpravodajské hodnoty (multiple) Message: Zvolte hlavní téma článku. Podle modelu obracené pyramidy by hlavní téma mělo být obsaženo už v titulku a leadu, měla by k němu odkazovat většina výroků v textu. U každé zprávy lze určit jen jedno hlavní téma. Mediální rámce (multiple): While the categories of topics focus on the content areas being covered (such as political negotiations, military operations, humanitarian crises, etc.), the media frames shape how that content is presented and interpreted by the audience. Mluvčí: typ mluvčích (multiple). For every question pick only options from these lists.\nZpravodajské hodnoty: Negativita negativity (Zdůrazňují se negativní jevy (konflikty, útoky, tragédie), negativní emoce (panika, strach, zoufalství), negativní jednání (krutost).), Blízkost proximity (Reportované události jsou zobrazeny jako geograficky nebo kulturně blízké (explicitní odkazy na společné hodnoty, na relevanci zprávy pro Česko a Čechy; čeští politici vyjadřující se k situaci).), Elitní osoby prominence (Zpráva obsahuje stanoviska vrcholných politiků, mezinárodních organizací, celebrit - lidí a organizací vnímaných jako autority), Personalizace personalization (Zpráva přibližuje osobní příběhy \'obyčejných\' lidí (HLP)), Dopad impact (Zpráva reflektuje důsledky událostí, ty jsou zobrazené jaké globální spíš než lokální, značné, dalekosáhlé, mimořádné, týkající se či ovlivňující velký počet lidí.)\nMessage: Vnitřní politické dění (Zpráva informuje o politickém vývoji v Izraeli nebo v Gaze, prohlášeních tamějích politiků, jejich návrhů na řešení konfliktu nebo reakcích na zahraniční diplomatické úsilí. Patří sem i zprávy o výměnách rukojmí.), Mezinárodní politické reakce (Zpráva informuje o mezinárodních reakcích na konflikt ze strany vrcholných politiků, mezinárodních organizací jako UN, o diplomatických iniciativách, jednáních, snahách o zprostředkování příměří.), Vojenské operace Izraele (Zpráva popisuje izraelské vojenské operace, jejich provedení, ale i plánování a taktizování.), Teroristické operace (Zpráva se soustředí na útoky palestinských frakcí jako Hamas, Hizballáh a dalších ozbrojených skupin, které jsou označeny jako teroristické (útoky Hútiů/Húsiů).), Dílčí konflikty a střety (Zpráva informuje o dílčích konfliktech a nevraživostech, o izolovaných případech násilí, jako jsou útoky osadníků nebo střelba na kontrolních stanovištích.), Dopad na civilisty a humanitární krize (Zpráva popisuje dopady konfliktu na civilisty, soustředí se na civilní oběti, vysídlení, dění v uprchlických táborech a příběhy Palestinců nebo Izraelců přímo zasažených konfliktem.), Humanitární pomoc (Zpráva popisuje snahy o poskytování nebo blokování humanitární pomoci, věnuje se možnostem podpory civilistům zasažených konfliktem, které vznikly z iniciativ vlád, nevládních organizací a mezinárodních organizací.), Globální reakce veřejnosti (Zpráva informuje o demonstracích na podporu Izraele nebo Palestiny ve světě.), Ekonomické důsledky (Zpráva informuje o globálních ekonomických důsledcích konfliktu (vliv na ceny ropy, zpožďování a zdražování přepravy zboží kvůli situaci v Suezském průplavu, komplikace pro turismus atd.)), Jiné ()\nMediální rámce (multiple): Rámec konfliktu (Zpráva situaci zobrazuje jako napjatou, konfliktní, nespravedlivou, polarizovanou. Dané rozpory jsou implicitně nebo explicitně zobrazeny jako těžko řešitelné, resp. řešitelné především silou. Zpráva implicitně nebo explicitně rozvrhuje aktéry do ingroup a outgroup, kde zisk jedné ze stran znamená ztrátu pro druhou a naopak.), Rámec budování míru (Zpráva výrazňuje snahy o řešení konfliktu prostřednictvím diplomacie, jednání a iniciativ budování míru. Tento rámec zdůrazňuje konstruktivní kroky směrem k míru a povzbuzuje optimismus ohledně možných řešení. Palestince a Izraelce nestaví proti sobě jako inherentně nepřátelské strany, ale apeluje na lidskost obou.), Humanitární rámec (Zpráva se soustředí na důsledky konfliktu pro běžný občanský život, zdůrazňuje civilní oběti, vysídlování a utrpení lidí na obou stranách. Tento rámec pomáhá vyvolat empatii a zdůrazňuje naléhavou potřebu humanitární pomoci.), Historicko-kulturní rámec (Zpráva zobrazuje situaci jako součást komplikovaného dlouhotvrajícího konfliktu, zdůrazňuje potřebnost znalosti historického kontextu, geopolitických faktorů či perspektiv zúčastněných aktérů pro pochopení současného stavu. Tento rámec pomáhá divákům rozvinout hlubší porozumění základních příčin a dynamiky konfliktu.), Geopolitický rámec (Zpráva zdůrazňuje globální geopolitický rozměr konfliktu, jehož důležitost přesahuje bezprostředně zasažené aktéry (blízký Východ). Zohledňuje mezinárodní reakce na konflikt, a to jak politické (diplomatická prohlášení, protesty a výzev k akci ze strany globálního společenství), tak občanské (demonstrace na podporu Izraele nebo Palestiny, diskuze na akademické půdě). Tento rámec ilustruje vzájemné propojení konfliktu s širšími geopolitickými dynamikami a veřejným míněním po celém světě.), Lokální rámec (Zpráva zobrazuje události jako zasahující bezprostředně zúčastněné (blízký Východ); responses from individuals, communities, and organizations within Israel and Palestine)\nMluvčí: Političtí představitelé Izraele (Vládní a opoziční politici, diplomaté Izraele a v Izraeli, kteří jsou přímo zapojeni do rozhodování a jednání souvisejících s konfliktem nebo je komentují.), Političtí představitelé Palestiny (Političtí představitelé Palestinské samosprávy nebo jiných palestinských vládních orgánů, včetně zvolených úředníků a vůdců.), Politici z blízkovýchodních zemí (Politici z jiných arabských nebo blízkovýchodních zemí, kteří mají zájem nebo účast v konfliktu, jako jsou ti z okolních arabských států nebo regionálních mocností.), Politici ze západních zemí (Politici ze západních zemí, včetně Spojených států, členských států Evropské unie a dalších západních zemí, kteří se mohou zapojovat do diplomatických úsilí nebo mít zájmy v konfliktu.), Mezinárodní organizace (Zástupci mezinárodních organizací zapojených do mírových operací, humanitární pomoci nebo diplomacie související s konfliktem, jako jsou Spojené národy, Evropská unie nebo Arabská liga.), Vojenští představitelé Izraele (Vojenští vůdci, velitelé nebo mluvčí z Izraelských obranných sil (IDF) nebo jiných izraelských bezpečnostních agentur zapojených do vojenských operací.), Představitelé teroristických skupin (Zástupci nebo vůdci militantních nebo teroristických skupin působících v regionu, jako jsou Hamas, Islámská džihád nebo Hizballáh.), Experti a analytici (Odborníci, akademici, analytici nebo komentátoři specializující se na blízkovýchodní záležitosti, řešení konfliktu, mezinárodní vztahy nebo související oblasti, poskytující porozumění a analýzu konfliktu.), Média a novináři (V textu jsou citovány informace převzaté z jiných médií (např. ""podle New York Times...), k nimž není přiřazen žádný jiný mluvčí (může jít o investigativu média, informace poskytnuté anonymně atd.)), Zástupci občanské společnosti (Zástupci občanských sdružení, nevládních organizací, lidskoprávních skupin, náboženských institucí nebo skupin prosazujících mír, humanitární úsilí nebo aktivismus související s konfliktem.), Očití svědci a civilisté (Očití svědkové, přeživší, civilisté nebo obyvatelé přímo postižení konfliktem, poskytující svědectví, rozhovory nebo pohledy na události na místě.), Členové izraelské nebo palestinské diaspory v zahraničí a sympatizanti (Členové izraelské nebo palestinské diaspory žijící v zahraničí, stejně jako sympatizanti nebo aktivisté mimo region, kteří podporují nebo odsuzují určité postoje v souvislosti s konfliktem.), Jiní ()\n\nYou will pick one option for these questions: Message. You will pick one or more options for these prompts: Zpravodajské hodnoty, Mediální rámce (multiple), Mluvčí.\nText will be in Czech language. JSON anwers will be in same language as the options are. You will give answer in JSON format according to this schema:'}, {'role': 'system', 'content': '{\n  "properties": {\n    "Zpravodajsk\\u00e9 hodnoty": {\n      "items": {\n        "enum": [\n          "Negativita negativity",\n          "Bl\\u00edzkost proximity",\n          "Elitn\\u00ed osoby prominence",\n          "Personalizace personalization",\n          "Dopad impact"\n        ],\n        "type": "string"\n      },\n      "title": "Zpravodajsk\\u00e9 Hodnoty",\n      "type": "array"\n    },\n    "Message": {\n      "enum": [\n        "Vnit\\u0159n\\u00ed politick\\u00e9 d\\u011bn\\u00ed",\n        "Mezin\\u00e1rodn\\u00ed politick\\u00e9 reakce",\n        "Vojensk\\u00e9 operace Izraele",\n        "Teroristick\\u00e9 operace",\n        "D\\u00edl\\u010d\\u00ed konflikty a st\\u0159ety",\n        "Dopad na civilisty a humanit\\u00e1rn\\u00ed krize",\n        "Humanit\\u00e1rn\\u00ed pomoc",\n        "Glob\\u00e1ln\\u00ed reakce ve\\u0159ejnosti",\n        "Ekonomick\\u00e9 d\\u016fsledky",\n        "Jin\\u00e9"\n      ],\n      "title": "Message",\n      "type": "string"\n    },\n    "Medi\\u00e1ln\\u00ed r\\u00e1mce (multiple)": {\n      "items": {\n        "enum": [\n          "R\\u00e1mec konfliktu",\n          "R\\u00e1mec budov\\u00e1n\\u00ed m\\u00edru",\n          "Humanit\\u00e1rn\\u00ed r\\u00e1mec",\n          "Historicko-kulturn\\u00ed r\\u00e1mec",\n          "Geopolitick\\u00fd r\\u00e1mec",\n          "Lok\\u00e1ln\\u00ed r\\u00e1mec"\n        ],\n        "type": "string"\n      },\n      "title": "Medi\\u00e1ln\\u00ed R\\u00e1mce (Multiple)",\n      "type": "array"\n    },\n    "Mluv\\u010d\\u00ed": {\n      "items": {\n        "enum": [\n          "Politi\\u010dt\\u00ed p\\u0159edstavitel\\u00e9 Izraele",\n          "Politi\\u010dt\\u00ed p\\u0159edstavitel\\u00e9 Palestiny",\n          "Politici z bl\\u00edzkov\\u00fdchodn\\u00edch zem\\u00ed",\n          "Politici ze z\\u00e1padn\\u00edch zem\\u00ed",\n          "Mezin\\u00e1rodn\\u00ed organizace",\n          "Vojen\\u0161t\\u00ed p\\u0159edstavitel\\u00e9 Izraele",\n          "P\\u0159edstavitel\\u00e9 teroristick\\u00fdch skupin",\n          "Experti a analytici",\n          "M\\u00e9dia a novin\\u00e1\\u0159i",\n          "Z\\u00e1stupci ob\\u010dansk\\u00e9 spole\\u010dnosti",\n          "O\\u010dit\\u00ed sv\\u011bdci a civilist\\u00e9",\n          "\\u010clenov\\u00e9 izraelsk\\u00e9 nebo palestinsk\\u00e9 diaspory v zahrani\\u010d\\u00ed a sympatizanti",\n          "Jin\\u00ed"\n        ],\n        "type": "string"\n      },\n      "title": "Mluv\\u010d\\u00ed",\n      "type": "array"\n    }\n  },\n  "required": [\n    "Zpravodajsk\\u00e9 hodnoty",\n    "Message",\n    "Medi\\u00e1ln\\u00ed r\\u00e1mce (multiple)",\n    "Mluv\\u010d\\u00ed"\n  ],\n  "title": "ResponseFormat",\n  "type": "object"\n}'}, {'role': 'user', 'content': 'The text to analyze is: Válka nebude, ujišťovali před týdnem agenti\n\nOdpověď na otázku, jak je možné, že operace Hamásu zastihla Izrael tak katastrofálně nepřepravený, se skrývá mimo jiné v odhalení, které přinesl v neděli izraelský list Ha’a rec.\n\n\nIzraelští představitelé podle Ha’arecu dospěli k mylnému závěru, že Hamás nemá zájem vyprovokovat plnohodnotnou válku s Izraelem.\n\n„Hamás se chtěl vyhnout plnohodnotné válce s Izraelem,“ sdělovala analýza rozvědky Mossad i kontrarozvědky Šin bet, přičemž agenti netušili zhola nic o plánech kombinovaného raketového útoku a náletů.\n\nStejné hodnocení dospělo k závěru, že Hamás nechce „ohrozit minulé úspěchy, které zlepšily život obyvatel Gazy“, podotkl Ha’arec s odkazem na ekonomické pobídky, které Izrael nabídl Gaze ke zmírnění napětí. Šlo například o pracovní povolení.\n\nNěkterá izraelská média útok bez okolků odsoudila jako nejhorší bezpečnostní selhání Izraele za posledních 50 let - od podzimu 1973, kdy během tzv. jomkipurské války Egypt a Sýrie zprvu zaskočily židovský stát masivní ofenzívou - a varovala, že ani úplné zničení Gazy a smrt celého vedení Hamásu jej nedokáže napravit, upozornil britský web The Telegraph.\n\n„Netanjahuova bezohlednost přivedla Izrael do války,“ stálo v titulku sloupku Yossiho Vertera, v němž novinář Ha’arecu zkritizoval izraelského premiéra.\n\n„I kdyby byla zničena celá Gaza, a to není třeba, a i kdyby se v uličkách válely hlavy všech vůdců Hamásu, největší bezpečnostní selhání od roku 1973 to nevynahradí. Hořkou pachuť debaklu to neosladí a šok z počtu zabitých a unesených nezmírní,“ napsal.\n\nCukr a bič neuspěly\n\nIzrael po léta používal v Gaze přístup cukru a biče, kdy vyvažoval vojenskou konfrontaci s Hamásem zmírňováním ekonomických omezení. To zahrnovalo tisíce povolení, která umožňovala lidem z Gazy přecházet do Izraele za prací.\n\nTato strategie vycházela z přesvědčení, že Hamás si přeje omezit přímou konfrontaci s Izraelem na minimum, přičemž hlavním zdrojem raketové palby a dalších eskalací se stávají jiné skupiny v Gaze, jako je Islámský džihád.\n\n„Šlo o selhání zpravodajských služeb, jinak to ani být nemohlo,“ řekl Jonathan Panikoff, bývalý vysoký americký činitel a analytik think tanku Atlantic Council.\n\nRozpolcení a Rijád\n\nTelevize ARD připomněla, že mezi Palestinci a Izraelem to vřelo už delší dobu. „Bojuje se po několika letech stupňujícího se palestinsko-izraelského násilí, které je podněcováno snahou Izraele rozšiřovat židovské osady na palestinském Západním břehu Jordánu,“ podotkla televize.\n\nRadikálové se také pokusili využít rozdělení židovské společnosti poté, co snahy Benjamina Netanjahua podřídit si soudnictví vyvolaly masové protesty. Ty se prozatím podařilo zlomit a do služby se hlásí i protestující armádní záložníci, včetně de facto nenahraditelných pilotů.\n\nPodle Natana Sachse, ředitele Centra pro blízkovýchodní politiku při Brookings Institution, může jít také o reakci na izraelské diplomatické snahy - zejména sblížení se Saúdskou Arábií.\n\n'}], 'model': 'gpt-3.5-turbo-0125', 'max_tokens': 1024, 'temperature': 0.0, 'top_p': 0.0}}
DEBUG:httpcore.http11:_trace.py:trace: send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:_trace.py:trace: send_request_headers.complete
DEBUG:httpcore.http11:_trace.py:trace: send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:_trace.py:trace: send_request_body.complete
DEBUG:httpcore.http11:_trace.py:trace: receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:_trace.py:trace: receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 10 Jun 2024 19:18:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-organization', b'user-eojliflj4bavern4nobjkpw0'), (b'openai-processing-ms', b'2988'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'60000'), (b'x-ratelimit-remaining-requests', b'9997'), (b'x-ratelimit-remaining-tokens', b'50362'), (b'x-ratelimit-reset-requests', b'20.668s'), (b'x-ratelimit-reset-tokens', b'9.637s'), (b'x-request-id', b'req_f39d9d516b59478a068e370b94b1c62b'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'891bb4fc1c32b374-PRG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:_client.py:_send_single_request: HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:_trace.py:trace: receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:_trace.py:trace: receive_response_body.complete
DEBUG:httpcore.http11:_trace.py:trace: response_closed.started
DEBUG:httpcore.http11:_trace.py:trace: response_closed.complete
DEBUG:openai._base_client:_base_client.py:_request: HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:root:run_discourseer.py:extract_answers: Response: {'Zpravodajské hodnoty': ['Negativita negativity', 'Blízkost proximity', 'Dopad impact'], 'Message': 'Vojenské operace Izraele', 'Mediální rámce (multiple)': ['Rámec konfliktu', 'Historicko-kulturní rámec', 'Geopolitický rámec'], 'Mluvčí': ['Politici z blízkovýchodních zemí', 'Experti a analytici']}
DEBUG:root:rater.py:add_model_response: Adding rating: Zpravodajské hodnoty, ['Negativita negativity', 'Blízkost proximity', 'Dopad impact']
DEBUG:root:rater.py:add_model_response: saved rating: file='2023-10-08T21-44-00_2023WN281071.txt' prompt_key='zpravodajské-hodnoty' question_id='Zpravodajské hodnoty' rating_results=['Negativita negativity', 'Blízkost proximity', 'Dopad impact']
DEBUG:root:rater.py:add_model_response: Adding rating: Message, Vojenské operace Izraele
DEBUG:root:rater.py:add_model_response: saved rating: file='2023-10-08T21-44-00_2023WN281071.txt' prompt_key='message' question_id='Hlavní téma článku' rating_results=['Vojenské operace Izraele']
DEBUG:root:rater.py:add_model_response: Adding rating: Mediální rámce (multiple), ['Rámec konfliktu', 'Historicko-kulturní rámec', 'Geopolitický rámec']
DEBUG:root:rater.py:add_model_response: saved rating: file='2023-10-08T21-44-00_2023WN281071.txt' prompt_key='medialni-ramec' question_id='Mediální rámce' rating_results=['Rámec konfliktu', 'Historicko-kulturní rámec', 'Geopolitický rámec']
DEBUG:root:rater.py:add_model_response: Adding rating: Mluvčí, ['Politici z blízkovýchodních zemí', 'Experti a analytici']
DEBUG:root:rater.py:add_model_response: saved rating: file='2023-10-08T21-44-00_2023WN281071.txt' prompt_key='mluvci' question_id='Mluvčí' rating_results=['Politici z blízkovýchodních zemí', 'Experti a analytici']
INFO:root:rater.py:save_to_csv: Rater model saved to experiments/gaza_mini/output_20240610-211817/model_ratings.csv
DEBUG:root:inter_rater_reliability.py:clean_data: Removed 0/75 rows with NaN values.
DEBUG:root:inter_rater_reliability.py:get_inter_rater_reliability: Calculating inter-rater reliability for (see whole in experiments/gaza_mini/output_20240610-211817/dataframe.csv):
                                                                                             codebook - Katka.csv  ...      worst_case
file                                 prompt_key           rating                                                   ...                
2023-10-07T00-00-00_2023WN280011.txt Hlavní téma článku   single_choice                  Dílčí konflikty a střety  ...  --WORST-CASE--
                                     Mediální rámce       Geopolitický rámec                                False  ...           False
                                                          Historicko-kulturní rámec                         False  ...           False
                                                          Humanitární rámec                                 False  ...           False
                                                          Lokální rámec                                      True  ...           False
...                                                                                                           ...  ...             ...
2023-10-10T09-37-00_2023WN283037.txt Zpravodajské hodnoty Blízkost proximity                                 True  ...           False
                                                          Dopad impact                                      False  ...           False
                                                          Elitní osoby prominence                           False  ...           False
                                                          Negativita negativity                             False  ...           False
                                                          Personalizace personalization                     False  ...           False

[75 rows x 8 columns]
INFO:root:run_discourseer.py:__call__: Inter-rater reliability results summary:
{
  "overall": {
    "fleiss_kappa": {
      "best_case": 0.62185,
      "with_model": 0.47031,
      "worst_case": 0.38813,
      "without_model": 0.55326
    },
    "krippendorff_alpha": {
      "best_case": 0.62286,
      "with_model": 0.47172,
      "worst_case": 0.38977,
      "without_model": 0.55475
    },
    "gwet_ac1": {
      "best_case": 0.82012,
      "with_model": 0.75008,
      "worst_case": 0.74276,
      "without_model": 0.78387
    },
    "majority_agreement": 0.747
  },
  "mean_through_prompts": {
    "fleiss_kappa": {
      "best_case": 0.54459,
      "with_model": 0.34731,
      "worst_case": 0.26362,
      "without_model": 0.47304
    },
    "krippendorff_alpha": {
      "best_case": 0.55497,
      "with_model": 0.36394,
      "worst_case": 0.282,
      "without_model": 0.48786
    },
    "gwet_ac1": {
      "best_case": 0.67044,
      "with_model": 0.49761,
      "worst_case": 0.47842,
      "without_model": 0.60924
    },
    "majority_agreement": 0.556
  }
}
DEBUG:matplotlib.pyplot:pyplot.py:switch_backend: Loaded backend agg version v2.2.
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Ponnala.ttf', name='Ponnala', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Italic.ttf', name='Yrsa', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Regular.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/TenaliRamakrishna-Regular.ttf', name='TenaliRamakrishna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/RaviPrakash.ttf', name='RaviPrakash', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 1.25
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Peddana-Regular.ttf', name='Peddana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/suranna.ttf', name='Suranna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/ramabhadra.ttf', name='Ramabhadra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MitraMono.ttf', name='Mitra ', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/LakkiReddy.ttf', name='LakkiReddy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Gurajada.ttf', name='Gurajada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 0.5349999999999999
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-ExtraLight.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 0.24
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/libreoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Muktibold.ttf', name='Mukti', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBoldItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/dhurjati.ttf', name='Dhurjati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/PottiSreeramulu.ttf', name='Potti Sreeramulu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/SreeKrushnadevaraya.ttf', name='Sree Krushnadevaraya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Ramaraja-Regular.ttf', name='Ramaraja', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/TimmanaRegular.ttf', name='Timmana', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-LightItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-BoldItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Mukti.ttf', name='Mukti', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Mandali-Regular.ttf', name='Mandali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Suravaram.ttf', name='Suravaram', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/SyamalaRamana.ttf', name='Syamala Ramana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/mallanna.ttf', name='Mallanna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/NTR.ttf', name='NTR', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/NATS.ttf', name='NATS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Gidugu.ttf', name='Gidugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 0.25
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 1.535
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Bold.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-MediumItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Ponnala.ttf', name='Ponnala', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Italic.ttf', name='Yrsa', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Regular.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/TenaliRamakrishna-Regular.ttf', name='TenaliRamakrishna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/RaviPrakash.ttf', name='RaviPrakash', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 1.25
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Peddana-Regular.ttf', name='Peddana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/suranna.ttf', name='Suranna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/ramabhadra.ttf', name='Ramabhadra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MitraMono.ttf', name='Mitra ', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/LakkiReddy.ttf', name='LakkiReddy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Gurajada.ttf', name='Gurajada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 0.5349999999999999
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-ExtraLight.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 0.24
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/libreoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Muktibold.ttf', name='Mukti', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBoldItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/dhurjati.ttf', name='Dhurjati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/PottiSreeramulu.ttf', name='Potti Sreeramulu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/SreeKrushnadevaraya.ttf', name='Sree Krushnadevaraya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Ramaraja-Regular.ttf', name='Ramaraja', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/TimmanaRegular.ttf', name='Timmana', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-LightItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-BoldItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Mukti.ttf', name='Mukti', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Mandali-Regular.ttf', name='Mandali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Suravaram.ttf', name='Suravaram', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/SyamalaRamana.ttf', name='Syamala Ramana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/mallanna.ttf', name='Mallanna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/NTR.ttf', name='NTR', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/NATS.ttf', name='NATS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Gidugu.ttf', name='Gidugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 0.25
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 1.535
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Bold.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-MediumItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:font_manager.py:_findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/xvlach22/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
